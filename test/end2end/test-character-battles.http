@baseUrl = http://localhost:3000
@rnd = {{$randomInt 1000 9999}}
@bearerAuth = {{login.response.body.token}}
@playerName = {{register.response.body.username}}
@playerId = {{register.response.body.id}}
@character1 = {{createCharacter1.response.body.id}}
@player2Name = {{register2.response.body.username}}
@player2Id = {{register2.response.body.id}}
@character2 = {{createCharacter2.response.body.id}}
@gameId = {{createGame.response.body.id}}
@battleId = {{createBattle.response.body.id}}
@characterBattle = {{getCharacter1.response.body.battle.id}}

### This file verifies character/battle interaction
### TODO: retrieving a character returns an empty battle object
### this should be fixed to return the battleId

### Create PLAYER
# @name register
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "username": "player{{rnd}}",
  "email": "player{{rnd}}@example.com",
  "password": "password"
}

### Create PLAYER 2
# @name register2
POST {{baseUrl}}/auth/register
Content-Type: application/json

{
  "username": "player{{rnd}}",
  "email": "player{{rnd}}@example.com",
  "password": "password"
}

### Login PLAYER 1
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "{{playerName}}",
  "password": "password"
}

### Create a game
# @name createGame
POST {{baseUrl}}/games
Authorization: Bearer {{bearerAuth}}
Content-Type: application/json

{
  "name": "test game {{rnd}}"
}

### Create a character
# @name createCharacter1
POST {{baseUrl}}/games/{{gameId}}/characters
Authorization: Bearer {{bearerAuth}}
Content-Type: application/json

{
  "name": "test character {{rnd}}",
  "strength": {{$randomInt 1 4}},
  "dexterity": {{$randomInt 1 4}},
  "intelligence": {{$randomInt 1 4}},
  "raceId": 1,
  "skills": []
}

### get the games with characters
GET {{baseUrl}}/games
Authorization: Bearer {{bearerAuth}}

### Add PLAYER 2 to game
POST {{baseUrl}}/games/{{gameId}}/players/{{player2Id}}
Authorization: Bearer {{bearerAuth}}

### Create a battle
# @name createBattle
POST {{baseUrl}}/games/{{gameId}}/battles
Authorization: Bearer {{bearerAuth}}

### Log in PLAYER 2
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "{{player2Name}}",
  "password": "password"
}

### Create a character
# @name createCharacter2
POST {{baseUrl}}/games/{{gameId}}/characters
Authorization: Bearer {{bearerAuth}}
Content-Type: application/json

{
  "name": "test character {{rnd}}",
  "strength": {{$randomInt 1 4}},
  "dexterity": {{$randomInt 1 4}},
  "intelligence": {{$randomInt 1 4}},
  "raceId": 1,
  "skills": []
}

### Get the character for player 1
# @name getCharacter1
GET {{baseUrl}}/characters/{{character1}}
Authorization: Bearer {{bearerAuth}}

### Join the battle
POST {{baseUrl}}/games/{{gameId}}/battles/{{battleId}}/join
Authorization: Bearer {{bearerAuth}}

### Get the character for player 2
# verify that the battleId is set
GET {{baseUrl}}/characters/{{character2}}
Authorization: Bearer {{bearerAuth}}

### Log in PLAYER 1
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "{{playerName}}",
  "password": "password"
}

### delete player 1, verify that player 2 is still in the battle
DELETE {{baseUrl}}/players/{{playerId}}
Authorization: Bearer {{bearerAuth}}

### Log in PLAYER 2
# @name login
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "{{player2Name}}",
  "password": "password"
}

### Get a battle
GET {{baseUrl}}/games/{{gameId}}/battles/{{battleId}}
Authorization: Bearer {{bearerAuth}}

